{"version":3,"sources":["assets/images/logo.svg","components/Micomponente.js","App.js","reportWebVitals.js","index.js"],"names":["data","id","compra","costo","Micomponente","state","form","modallInsertar","modallEditar","handleChange","e","setState","target","name","value","mostrarModalInsertar","ocultarModalInsertar","mostrarModalEditar","registro","ocultarModalEditar","insertar","valorNuevo","length","lista","push","editar","dato","contador","map","elimiar","window","confirm","splice","className","Container","Button","color","onClick","Table","this","elemento","Modal","isOpen","ModalHeader","ModalBody","FormGroup","readOnly","type","onChange","ModalFooter","Component","App","presentacion","src","logo","alt","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ad6e989.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\r\n//Necesario bootstrap \r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//Necesario reactstrap\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    FormGroup,\r\n    ModalFooter,\r\n  } from \"reactstrap\";\r\n\r\n  // Mi base de datos\r\n  const data = [\r\n    { id: 1, compra: \"Camisa\", costo: \"100\" },\r\n    { id: 2, compra: \"Zapatos\", costo: \"10\" },\r\n    { id: 3, compra: \"Comida Rapida\", costo: \"20\" },\r\n    { id: 4, compra: \"Pan\", costo: \"5\" },\r\n    { id: 5, compra: \"Chori\", costo: \"30\" },\r\n    ];\r\n\r\nclass Micomponente extends Component{\r\n\r\n//estados\r\n    state = {\r\n        data: data,\r\n        form: {\r\n          id: \"\",\r\n          compra: \"\",\r\n          costo: \"\",\r\n        },\r\n        modallInsertar: false,\r\n        modallEditar: false,\r\n      };\r\n    \r\n      handleChange = (e) => {\r\n        this.setState({\r\n          form: {\r\n            ...this.state.form,\r\n            [e.target.name]: e.target.value,\r\n          },\r\n        });\r\n      };\r\n\r\n//modal insertar abrir\r\n      mostrarModalInsertar = () => {\r\n        this.setState({ modallInsertar: true });\r\n      };\r\n//modal insertar cerar\r\n      ocultarModalInsertar = () => {\r\n        this.setState({ modallInsertar: false });\r\n      };\r\n    \r\n//modal editar abrir\r\n      mostrarModalEditar = (registro) => {\r\n        this.setState({ modallEditar: true, form: registro });\r\n      };\r\n//modal editar cerar\r\n      ocultarModalEditar = () => {\r\n        this.setState({ modallEditar: false });\r\n      };\r\n    \r\n//insertar datos, importante el uso de let para el uso interno\r\n      insertar = () => {\r\n        let valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.data.length + 1;\r\n        let lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ data: lista, modallInsertar: false });\r\n      };\r\n    \r\n//editar datos, importante el uso de let para el uso interno\r\n      editar = (dato) => {\r\n        let contador=0;\r\n        let lista=this.state.data;\r\n        lista.map((registro)=>{\r\n          if(dato.id==registro.id){\r\n            lista[contador].compra=dato.compra;\r\n            lista[contador].costo=dato.costo;\r\n          }\r\n          contador++\r\n        })\r\n        this.setState({data: lista,  modallEditar: false});\r\n    \r\n      }\r\n    \r\n//eliminar datos , importante el uso de let para el uso interno\r\n      elimiar=(dato)=> {\r\n        let opcion=window.confirm(\"Estas seguro que quieres eliminar? \" +dato.id);\r\n        if(opcion){\r\n            let contador=0;\r\n            let lista = this.state.data;\r\n          lista.map((registro)=>{\r\n            if(registro.id==dato.id){\r\n              lista.splice(contador, 1);\r\n            }\r\n            contador++;\r\n          });\r\n          this.setState({data: lista});\r\n        }\r\n      }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n//div que envuelve todo, necesario para poder incluir varios elementos\r\n            <div className=\"mi-componente\">\r\n                <Container>\r\n              <br />\r\n              <Button color=\"success\" onClick={() => this.mostrarModalInsertar()}>\r\n                {\" \"}\r\n                Insertar Nueva Gasto{\" \"}\r\n              </Button>\r\n              <br />\r\n              <br />\r\n    \r\n              <Table>\r\n                <thead >\r\n                  <tr>\r\n                    <th>id</th>\r\n                    <th>Compra</th>\r\n                    <th>Precio</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n    \r\n                <tbody>\r\n                  {this.state.data.map((elemento) => (\r\n                    <tr>\r\n                      <td>{elemento.id}</td>\r\n                      <td>{elemento.compra}</td>\r\n                      <td>{elemento.costo}$</td>\r\n                      <td>\r\n                        <Button color=\"primary\"  onClick={() => this.mostrarModalEditar(elemento)}> \r\n                         Editar\r\n                        </Button>\r\n                        {\"  \"}\r\n                        <Button color=\"danger \" onClick={() => this.elimiar(elemento)}>Eliminar</Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Container>\r\n            <Modal isOpen={this.state.modallInsertar}>\r\n              <ModalHeader>\r\n                <div>\r\n                  <h3> Insertar Nuevo</h3>\r\n                </div>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <label>Id:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    value={this.state.data.length + 1}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Compra:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"compra\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Precio:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"costo\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.insertar()}>\r\n                  Insertar\r\n                </Button>\r\n                <Button color=\"danger\" onClick={() => this.ocultarModalInsertar()}>\r\n                  Cancelar\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            <Modal isOpen={this.state.modallEditar}>\r\n              <ModalHeader>\r\n                <div>\r\n                  <h3> Insertar Nuevo</h3>\r\n                </div>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <label>Id:</label>\r\n                  <input className=\"form-control\" readOnly type=\"text\" value={this.state.form.id} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Compra:</label>\r\n                  <input className=\"form-control\" name=\"compra\" type=\"text\" onChange={this.handleChange} value={this.state.form.compra}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Precio:</label>\r\n                  <input className=\"form-control\" name=\"costo\" type=\"text\" onChange={this.handleChange}  value={this.state.form.costo} />\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\"  onClick={()=>this.editar(this.state.form)}>Actualizar</Button>\r\n                <Button color=\"danger\" onClick={()=>this.ocultarModalEditar()}>\r\n                  Cancelar\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n\r\n        );\r\n    };\r\n\r\n};\r\n\r\n// exportarlo para utilizar\r\nexport default Micomponente;","import React from \"react\";\nimport logo from \"./assets/images/logo.svg\";\nimport \"./assets/css/App.css\";\nimport Micomponente from \"./components/Micomponente\";\n\nfunction App() {\n  // pruebas de variables\n  let nombre = \"Yeferson Marcano\";\n\n  // pruebas de variables dentro de otra\n  let presentacion = <h2> YM - {nombre}</h2>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" width=\"20%\" />\n          <h3 className=\"description-name\">\n            Hola soy Yeferson Marcano y este es mi CRUD de practica.\n          </h3>\n        </p>\n        {presentacion}\n        <section className=\"componentes\">\n          {/* importar mi componente */}\n          <Micomponente />\n        </section>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}